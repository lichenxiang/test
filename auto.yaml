blueprint:
  name: "民宿节电逻辑（可导入无报错版）"
  description: "门关闭触发空调延时，随意贴可保持供电，支持多随意贴，等待期间门打开取消断电"
  domain: automation
  input:
    door_sensor:
      name: 门磁
      selector:
        entity:
          domain: binary_sensor
    air_conditioner:
      name: 智能开关（空调）
      selector:
        entity:
          domain: switch
    xiaoai_notify:
      name: 小爱音箱（notify实体）
      selector:
        entity:
          domain: notify
    mesh_buttons:
      name: 随意贴
      selector:
        entity:
          domain: sensor
          multiple: true

mode: single
max_exceeded: silent

trigger:
  - platform: state
    entity_id: !input door_sensor
    to: 'off'

action:
  # 保存实体 ID 到变量
  - variables:
      door: !input door_sensor
      ac: !input air_conditioner
      speaker: !input xiaoai_notify
      buttons: !input mesh_buttons
      waiting_for_button: true
      keep_power: false

  # 播报（改为notify）
  - service: "{{ speaker }}"
    data:
      message: "您好，您需要在1分钟内按下取点按钮保持空调不断电"

  # 等待随意贴按下或门打开
  - wait_for_trigger:
      - platform: state
        entity_id: "{{ buttons }}"
        to: 'on'
      - platform: state
        entity_id: "{{ door }}"
        to: 'on'
    timeout: '00:01:00'
    continue_on_timeout: true
    variables:
      triggered_entity: "{{ trigger.entity_id if trigger is not none else '' }}"

  # 判断触发源
  - choose:
      # 随意贴按下
      - conditions:
          - condition: template
            value_template: >
              {% set button_ids = expand(buttons) | map(attribute='entity_id') | list %}
              {{ triggered_entity in button_ids }}
        sequence:
          - variables:
              keep_power: true

      # 门在等待期间打开
      - conditions:
          - condition: state
            entity_id: "{{ door }}"
            state: 'on'
        sequence:
          - variables:
              keep_power: true

  # 空调控制
  - choose:
      # 保持供电
      - conditions:
          - condition: template
            value_template: "{{ keep_power }}"
        sequence:
          - service: logbook.log
            data:
              name: "空调控制"
              message: "随意贴按下或门打开，保持供电，不断电"
      # 断电后上电
      - conditions:
          - condition: template
            value_template: >
              {% set door_state = states(door) %}
              {{ not keep_power and door_state.state == 'off' }}
        sequence:
          - service: switch.turn_off
            target:
              entity_id: "{{ ac }}"
          - delay: '00:00:03'
          - service: switch.turn_on
            target:
              entity_id: "{{ ac }}"

  # 清理临时状态
  - variables:
      waiting_for_button: false
      keep_power: false
